ðŸ“˜ TAG DICTIONARY â€” SEMANTIC GROUP SYSTEM (Plaintext)

This document defines the tag dictionary format and current semantic groups.
Each tag belongs to a semantic group that describes a dimension of meaning.
Symbols and design documents should carry at least one tag from each group.

This dictionary is a LIVING DOCUMENT. Tags may evolve as the project grows.

----------------------------------------
FORMAT RULES (MECE PRINCIPLES)
----------------------------------------

- Mutually Exclusive: Tags within a group should not overlap in meaning.
- Collectively Exhaustive: Together, the tag groups should fully describe any element.
- One tag per group minimum (unless truly N/A).
- Avoid synonyms or redundant specificity.

----------------------------------------
GROUP: domain
> What is this about?

- combat        â†’ Weapons, damage, initiative
- movement      â†’ Travel, zones, adjacency, tactical position
- perception    â†’ Visibility, RoP, stealth, fog-of-war
- inventory     â†’ Items, carry weight, storage, containers
- quests        â†’ Objective flows, triggers, stage events
- faction       â†’ Actors, politics, relationships, diplomacy
- UI            â†’ Rendering, display memory, overlays
- mutation      â†’ Technique upgrades, evolution, skill tree branches
- narrative     â†’ Worldbuilding, tone, scripted events

----------------------------------------
GROUP: data_affinity
> What structured data does it interact with?

- skill_data       â†’ XP, advancement, unlocks
- actor_data       â†’ Player and NPC stats
- faction_data     â†’ Diplomacy, kingdom relations
- quest_data       â†’ Objective chains, flags
- technique_data   â†’ Combat moves and execution
- mutation_data    â†’ Procedural upgrades, effects, probabilities
- item_data        â†’ Weapons, armor, weight, stats
- map_data         â†’ Zones, floorplans, terrain

----------------------------------------
GROUP: scope_horizon
> How far is this expected to persist in the project?

- prototype    â†’ Throwaway, early scaffolding
- mvp          â†’ Minimal viable, replaceable
- interim      â†’ Good enough for current scale
- final        â†’ Expected long-term structure
- shim         â†’ Temporary glue bridging systems

----------------------------------------
GROUP: semantic_role
> What role does this concept or file play in the system?

- procedural_model  â†’ Generation or randomized logic
- system_definition â†’ Defines structural rules or models
- data_schema       â†’ Data layout or field definitions
- render_contract   â†’ Output structure, interface boundary
- trigger_logic     â†’ Conditionals, event flow
- runtime_behavior  â†’ Execution-phase systems (ticks, pulses, etc.)

----------------------------------------
EXAMPLE TAG BLOCK
(Used at top of file or inside a docstring)

@tags:
  domain: mutation
  data_affinity: skill_data, mutation_data
  scope_horizon: final
  semantic_role: procedural_model

----------------------------------------

Future groups may include:
- reliability_level
- AI_assist_mode
- debug_visibility
- test_coverage_status

But the above four (domain, data_affinity, scope_horizon, semantic_role) are the recommended foundation for all assets.

----------------------------------------
